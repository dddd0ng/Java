<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swcamp.dynamic.MenuMapper">
    <resultMap id="menuResultMap" type="com.swcamp.dynamic.MenuDTO">
        <id property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!--
     설명.
      OGNL(Object Graph Navigation Language)
      : single quotation('') 구간의 값은 리터럴 값으로 보고 그게 아닌 이름은 객체의 필드 또는 변수명으로
        인식하게 작성하는 기법이다.

     설명.
      1. gte(>=): greater than equal
      2. gt(>): greater than
      3. lte(<=): less than equal
      4. lt(<): less than
      5. eq(=): equal
      6. neq(!=): not equal
  -->
    <select id="selectMenuByPrice" parameterType="_int" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="maxPrice gte 0 and maxPrice lte 10000">
            <![CDATA[
           AND A.MENU_PRICE < #{maxPrice}
           ]]>
        </if>
        <if test="maxPrice gt 10000 and maxPrice lte 20000">
            AND A.MENU_PRICE BETWEEN 10000 AND #{maxPrice}
        </if>
        <if test="maxPrice gt 20000 and maxPrice lte 30000">
            AND A.MENU_PRICE BETWEEN 20000 AND #{maxPrice}
        </if>
        <if test="maxPrice gt 30000">
            AND A.MENU_PRICE BETWEEN 30000 AND #{maxPrice}
        </if>
    </select>
    <select id="searchMenu" parameterType="com.swcamp.dynamic.SearchCriteria"
            resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition eq 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%', #{value}, '%')
        </if>
        <if test="condition == 'category'">
            AND B.CATEGORY_NAME LIKE CONCAT('%', #{value}, '%')
        </if>
    </select>
    <select id="searchMenuBySupCategory"
            parameterType="com.swcamp.dynamic.SearchCriteria"
            resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
                AND A.CATEGORY_CODE IN (4, 5, 6, 7)
                <!--                AND A.CATEGORY_CODE IN (select category_code from tbl_category where ref_category_code = 1)-->
            </when>
            <when test="value == '음료'">
                AND A.CATEGORY_CODE IN (8, 9, 10)
            </when>
            <when test="value == '디저트'">
                AND A.CATEGORY_CODE IN (11, 12)
            </when>
        </choose>
    </select>
    <select id="searchMenuByRandomMenuCode" parameterType="list" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.MENU_CODE IN
        <foreach collection="list" item="menuCode" open="(" close=")" separator=", ">
            #{menuCode}
        </foreach>
    </select>

    <select id="searchMenuByCodeOrSearchAll" parameterType="com.swcamp.dynamic.SearchCriteria" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
<!--     && no and oooo  -->
        <if test="condition != null and condition == 'menuCode">
            WHERE A.MENU_CODE = ${value}
        </if>
    </select>
    <!-- where절이 공통되지 않는 경우 -->
    <!--
        i) where
        i-1) where 태그를 하나만 작성함
        i-2) AND는 필요하면 활용하고 없으면 무시함(WHERE 다음에 바로 AND나 OR이 오면 무시함)

        ii) trim
    -->
    <select id="searchMenuByNameOrCategory" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
<!--        <where>-->
<!--            <if test="name != null">-->
<!--                A.MENU_NAME LIKE CONCAT('%', #{name}, '%')-->
<!--            </if>-->
<!--            <if test="categoryCode != null">-->
<!--                AND A.CATEGORY_CODE = #{categoryCode}-->
<!--            </if>-->
<!--        </where>-->

        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="name != null">
                A.MENU_NAME LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="categoryCode != null">
                AND A.CATEGORY_CODE = #{categoryCode}
            </if>
        </trim>
<!--trim => SQL감싸면서 앞뒤 불필요한 구문(and,or 등)자동으로 다듬어주는 태그
동적쿼리 작성할때 조건이 있을수도, 없을수도 있을 때 문법 오류를 방지하려 씀
prefix=where -> 조건이 하나라도 있으면 맨 앞에 where
(조건이 생기면, 조건이 있을때만 where붙여줌)
prefixOverrides -> 블록 안 제일 앞부분에 특정 키워드가 있으면 제거해주는 역할
(앞에 잘못 붙은 and, or 지워줌)
and, or같은게 맨 앞에 있으면 문법 에러가 나니림 자동으로 지워줌
-->
    </select>
        <update id="updateMenu" parameterType="hashmap">
        UPDATE
              TBL_MENU
<!--            <set>-->
<!--                <if test="menuName != null and menuName != ''">-->
<!--                    MENU_NAME = #{menuName}-->
<!--                </if>-->

<!--                <if test="orderableStatus != null and orderableStatus != ''">-->
<!--                    , ORDERABLE_STATUS = #{orderableStatus}-->
<!--                </if>-->
<!--            </set>-->
<!--            WHERE MENU_CODE = #{menuCode}-->

            <trim prefix="SET" prefixOverrides=",">
                <set>
                    <if test="menuName != null and menuName != ''">
                        MENU_NAME = #{menuName}
                    </if>

                    <if test="orderableStatus != null and orderableStatus != ''">
                        , ORDERABLE_STATUS = #{orderableStatus}
                    </if>
                </set>
                WHERE MENU_CODE = #{menuCode}
            </trim>

        </update>


</mapper>